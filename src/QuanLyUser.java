/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package myJInternalFrame;

import connectionSQL.connectionSQL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import myClass.ClassUser;

/**
 *
 * @author ducmc
 */
public class QuanLyUser extends javax.swing.JInternalFrame {

    List<ClassUser> listUser = new ArrayList<>();
    Connection cn;
    int index = 0;
    DefaultTableModel model;

    public QuanLyUser() {
        initComponents();
        cn = connectionSQL.ketnoi("QLIPHONE");
        fillToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel4 = new keeptoo.KGradientPanel();
        lblTaiKhoan = new javax.swing.JLabel();
        txtTaiKhoan = new javax.swing.JTextField();
        lbMatKhau = new javax.swing.JLabel();
        txtMatKhau = new javax.swing.JTextField();
        lbQuen = new javax.swing.JLabel();
        cpQLUser = new javax.swing.JScrollPane();
        tbQLUser = new javax.swing.JTable();
        pnButton = new javax.swing.JPanel();
        cbbQuen = new javax.swing.JComboBox<>();
        btnSuaUser = new javax.swing.JButton();
        btnTimkiemUser = new javax.swing.JButton();
        btnXoaUser = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        kGradientPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Quản lý User", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Monospaced", 1, 48), new java.awt.Color(255, 255, 255))); // NOI18N
        kGradientPanel4.setkEndColor(new java.awt.Color(229, 189, 240));
        kGradientPanel4.setkGradientFocus(1000);
        kGradientPanel4.setkStartColor(new java.awt.Color(168, 168, 233));
        kGradientPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kGradientPanel4MouseClicked(evt);
            }
        });

        lblTaiKhoan.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        lblTaiKhoan.setForeground(new java.awt.Color(252, 244, 252));
        lblTaiKhoan.setText("Tài Khoản : ");

        txtTaiKhoan.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        txtTaiKhoan.setEnabled(false);
        txtTaiKhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTaiKhoanActionPerformed(evt);
            }
        });

        lbMatKhau.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        lbMatKhau.setForeground(new java.awt.Color(252, 244, 252));
        lbMatKhau.setText("Mật Khẩu :");

        txtMatKhau.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N

        lbQuen.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        lbQuen.setForeground(new java.awt.Color(252, 244, 252));
        lbQuen.setText("Quyền :");

        tbQLUser.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        tbQLUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tài Khoản", "Mật Khẩu", "Quền "
            }
        ));
        tbQLUser.setFillsViewportHeight(true);
        tbQLUser.setRowHeight(35);
        tbQLUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbQLUserMouseClicked(evt);
            }
        });
        cpQLUser.setViewportView(tbQLUser);

        pnButton.setOpaque(false);
        pnButton.setLayout(new java.awt.GridBagLayout());

        cbbQuen.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        cbbQuen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Nhân Viên" }));
        cbbQuen.setToolTipText("");

        btnSuaUser.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        btnSuaUser.setForeground(new java.awt.Color(72, 61, 139));
        btnSuaUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Edit_32x32.png"))); // NOI18N
        btnSuaUser.setText("Sửa Thông tin User");
        btnSuaUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaUserActionPerformed(evt);
            }
        });

        btnTimkiemUser.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        btnTimkiemUser.setForeground(new java.awt.Color(72, 61, 139));
        btnTimkiemUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Search_Icon_32.png"))); // NOI18N
        btnTimkiemUser.setText("Tìm Kiếm");
        btnTimkiemUser.setMaximumSize(new java.awt.Dimension(321, 41));
        btnTimkiemUser.setMinimumSize(new java.awt.Dimension(321, 41));
        btnTimkiemUser.setPreferredSize(new java.awt.Dimension(321, 41));
        btnTimkiemUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimkiemUserActionPerformed(evt);
            }
        });

        btnXoaUser.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        btnXoaUser.setForeground(new java.awt.Color(72, 61, 139));
        btnXoaUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Delete_32x32.png"))); // NOI18N
        btnXoaUser.setText("Xóa User");
        btnXoaUser.setMaximumSize(new java.awt.Dimension(293, 41));
        btnXoaUser.setPreferredSize(new java.awt.Dimension(321, 41));
        btnXoaUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel4Layout = new javax.swing.GroupLayout(kGradientPanel4);
        kGradientPanel4.setLayout(kGradientPanel4Layout);
        kGradientPanel4Layout.setHorizontalGroup(
            kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel4Layout.createSequentialGroup()
                .addGroup(kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(kGradientPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cpQLUser, javax.swing.GroupLayout.PREFERRED_SIZE, 965, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, kGradientPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTaiKhoan, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel4Layout.createSequentialGroup()
                                .addComponent(lbMatKhau)
                                .addGap(13, 13, 13))
                            .addComponent(lbQuen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMatKhau)
                            .addComponent(txtTaiKhoan)
                            .addComponent(cbbQuen, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(76, 76, 76)
                        .addGroup(kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSuaUser)
                            .addComponent(btnTimkiemUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXoaUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        kGradientPanel4Layout.setVerticalGroup(
            kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(kGradientPanel4Layout.createSequentialGroup()
                        .addGroup(kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbQuen, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbbQuen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(kGradientPanel4Layout.createSequentialGroup()
                        .addComponent(btnSuaUser)
                        .addGap(20, 20, 20)
                        .addComponent(btnTimkiemUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(btnXoaUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(cpQLUser, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTaiKhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTaiKhoanActionPerformed

    }//GEN-LAST:event_txtTaiKhoanActionPerformed
    // đưa thông tin từ bảng lên form
    private void tbQLUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbQLUserMouseClicked
        this.showDetail();
    }//GEN-LAST:event_tbQLUserMouseClicked

    private void btnSuaUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaUserActionPerformed
        this.suaUser();
        txtTaiKhoan.setEditable(true);
    }//GEN-LAST:event_btnSuaUserActionPerformed

    private void btnTimkiemUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimkiemUserActionPerformed
        timKiem();
    }//GEN-LAST:event_btnTimkiemUserActionPerformed

    private void btnXoaUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaUserActionPerformed

    }//GEN-LAST:event_btnXoaUserActionPerformed

    private void kGradientPanel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kGradientPanel4MouseClicked
        // TODO add your handling code here:
        this.fillToTable();
    }//GEN-LAST:event_kGradientPanel4MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSuaUser;
    private javax.swing.JButton btnTimkiemUser;
    private javax.swing.JButton btnXoaUser;
    private javax.swing.JComboBox<String> cbbQuen;
    private javax.swing.JScrollPane cpQLUser;
    private keeptoo.KGradientPanel kGradientPanel4;
    private javax.swing.JLabel lbMatKhau;
    private javax.swing.JLabel lbQuen;
    private javax.swing.JLabel lblTaiKhoan;
    private javax.swing.JPanel pnButton;
    private javax.swing.JTable tbQLUser;
    private javax.swing.JTextField txtMatKhau;
    private javax.swing.JTextField txtTaiKhoan;
    // End of variables declaration//GEN-END:variables
private void fillToTable() {
        model = (DefaultTableModel) tbQLUser.getModel();
        model.setRowCount(0);

        try {
            listUser.clear();
            Statement st = cn.createStatement();
            String sql = "SELECT * FROM NGUOIDUNG";
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                String tk = rs.getString(1);
                String mk = rs.getString(2);
                String quen = rs.getString(3);

                ClassUser us = new ClassUser(tk, mk, quen);
                listUser.add(us);
            }
            for (int i = 0; i < listUser.size(); i++) {
                Object[] usob = new Object[]{
                    listUser.get(i).getTaiKhoan(),
                    listUser.get(i).getMatKhau(),
                    listUser.get(i).getQuen().equalsIgnoreCase("1") ? "Admin" : "Nhân Viên",};
                model.addRow(usob);
            }
        } catch (Exception e) {
        }

    }

    private void suaUser() {
        try {
            String sql = "UPDATE NGUOI DUNG \n"
                    + "set PASSWORD = ?"
                    + "WHERE USENAME = ?";
            PreparedStatement ps = cn.prepareStatement(sql);
            ps.setString(2, txtTaiKhoan.getText());
            ps.setString(1, txtMatKhau.getText());

            int row = ps.executeUpdate();
            if (row > 0) {
                JOptionPane.showMessageDialog(this, "Thay đổi mật khẩu thành công");
                index = listUser.size() - 1;
                showDetail();

            } else {
                JOptionPane.showMessageDialog(this, "Lỗi đổi mật khẩu");
            }
            ps.close();
            fillToTable();
        } catch (Exception e) {
        }

    }

    private void showDetail() {
        try {
            model = (DefaultTableModel) tbQLUser.getModel();
            int selectRow = tbQLUser.getSelectedRow();
            ClassUser us = listUser.get(selectRow);

            txtTaiKhoan.setText((String) model.getValueAt(selectRow, 0));
            txtMatKhau.setText((String) model.getValueAt(selectRow, 1));
            cbbQuen.setSelectedItem((String) model.getValueAt(selectRow, 2));

        } catch (Exception e) {
        }

    }

    private void timKiem() {
        DefaultTableModel model = (DefaultTableModel) tbQLUser.getModel();
        String option[] = {"Tìm kiếm tài khoản", "Hủy"};
        ImageIcon iconFind = new ImageIcon("src//icons//Search_Icon_32.png");
        int result = JOptionPane.showOptionDialog(this, "Tìm kiếm!", "Tìm kiếm Sản phẩm", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, iconFind, option, null);

        if (result == 0) {
            String tk = (String) JOptionPane.showInputDialog(this, "Mời bạn tài khoản!", "Tìm kiếm bằng tài khoản", JOptionPane.INFORMATION_MESSAGE, iconFind, null, null);
            boolean resultInput = false;
            for (int i = 0; i < listUser.size(); i++) {
                if (tk.equals(listUser.get(i).getTaiKhoan())) {
                    JOptionPane.showMessageDialog(this, "Tìm thấy tài khoản");
                    resultInput = true;
                    txtTaiKhoan.setText(listUser.get(i).getTaiKhoan());
                    txtMatKhau.setText(listUser.get(i).getMatKhau());
                    cbbQuen.setSelectedItem(listUser.get(i).getQuen());
                    model.setRowCount(0);

                    Object[] usob = new Object[]{
                        listUser.get(i).getTaiKhoan(),
                        listUser.get(i).getMatKhau(),
                        listUser.get(i).getQuen()};
                    model.addRow(usob);
                }

            }
            if (resultInput == false) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy!", "Tìm kiếm", JOptionPane.INFORMATION_MESSAGE, iconFind);
            }
        }

    }

}
