package myJInternalFrame;

import myClass.ClassHoaDon;
import java.util.List;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import connectionSQL.connectionSQL;
import java.text.DecimalFormat;
import java.text.NumberFormat;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author markhyun
 */
public class HoaDon extends javax.swing.JInternalFrame {

    List<ClassHoaDon> listHoaDon = new ArrayList<>();
    Connection cn;
    DefaultTableModel model;

    public HoaDon() throws SQLException {
        initComponents();
        cn = connectionSQL.ketnoi("QLIPHONE");
        fillToTable();

    }

    //dịnh dạng tiền
    public String dinhDangtien(double so) {
        NumberFormat fomatter = new DecimalFormat("###,###,###,###" + " VND");
        return fomatter.format(so);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        kGradientPanel3 = new keeptoo.KGradientPanel();
        txtMaHD = new javax.swing.JTextField();
        txtMaNV = new javax.swing.JTextField();
        txtNgayMua = new javax.swing.JTextField();
        lbMaHD = new javax.swing.JLabel();
        lbMaNV = new javax.swing.JLabel();
        lbNgayMua = new javax.swing.JLabel();
        cpHoaDon = new javax.swing.JScrollPane();
        tbHoaDon = new javax.swing.JTable();
        lbMaKH = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        lbTongTien = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btnTimKiemHoaDon = new javax.swing.JButton();
        btnHienThiAll = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        kGradientPanel3.setBackground(new java.awt.Color(252, 244, 252));
        kGradientPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hóa đơn", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Monospaced", 1, 48), new java.awt.Color(255, 255, 255))); // NOI18N
        kGradientPanel3.setkEndColor(new java.awt.Color(229, 189, 240));
        kGradientPanel3.setkGradientFocus(1000);
        kGradientPanel3.setkStartColor(new java.awt.Color(168, 168, 233));

        txtMaHD.setEditable(false);
        txtMaHD.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N

        txtMaNV.setEditable(false);
        txtMaNV.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N

        txtNgayMua.setEditable(false);
        txtNgayMua.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N

        lbMaHD.setBackground(new java.awt.Color(252, 244, 252));
        lbMaHD.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        lbMaHD.setForeground(new java.awt.Color(252, 244, 252));
        lbMaHD.setText("Mã hóa đơn:");

        lbMaNV.setBackground(new java.awt.Color(252, 244, 252));
        lbMaNV.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        lbMaNV.setForeground(new java.awt.Color(252, 244, 252));
        lbMaNV.setText("Nhân viên bán:");

        lbNgayMua.setBackground(new java.awt.Color(252, 244, 252));
        lbNgayMua.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        lbNgayMua.setForeground(new java.awt.Color(252, 244, 252));
        lbNgayMua.setText("Ngày bán:");

        tbHoaDon.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        tbHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Mã nhân viên", "Ngày bán", "Mã khách hàng", "Tổng tiền"
            }
        ));
        tbHoaDon.setFillsViewportHeight(true);
        tbHoaDon.setGridColor(new java.awt.Color(255, 255, 255));
        tbHoaDon.setRowHeight(35);
        tbHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHoaDonMouseClicked(evt);
            }
        });
        cpHoaDon.setViewportView(tbHoaDon);

        lbMaKH.setBackground(new java.awt.Color(252, 244, 252));
        lbMaKH.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        lbMaKH.setForeground(new java.awt.Color(252, 244, 252));
        lbMaKH.setText("Mã Khách hàng:");

        txtMaKH.setEditable(false);
        txtMaKH.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N

        lbTongTien.setBackground(new java.awt.Color(252, 244, 252));
        lbTongTien.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        lbTongTien.setForeground(new java.awt.Color(252, 244, 252));
        lbTongTien.setText("Tổng tiền:");

        txtTongTien.setEditable(false);
        txtTongTien.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N

        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(200, 100));
        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {1};
        jPanel1Layout.columnWeights = new double[] {1.0};
        jPanel1.setLayout(jPanel1Layout);

        btnTimKiemHoaDon.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        btnTimKiemHoaDon.setForeground(new java.awt.Color(72, 61, 139));
        btnTimKiemHoaDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Search_Icon_32.png"))); // NOI18N
        btnTimKiemHoaDon.setText("Tìm hóa đơn");
        btnTimKiemHoaDon.setPreferredSize(new java.awt.Dimension(285, 41));
        btnTimKiemHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemHoaDonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 21, 0);
        jPanel1.add(btnTimKiemHoaDon, gridBagConstraints);

        btnHienThiAll.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        btnHienThiAll.setForeground(new java.awt.Color(72, 61, 139));
        btnHienThiAll.setText("Hiển thị tất cả HD");
        btnHienThiAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHienThiAllActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        jPanel1.add(btnHienThiAll, gridBagConstraints);

        javax.swing.GroupLayout kGradientPanel3Layout = new javax.swing.GroupLayout(kGradientPanel3);
        kGradientPanel3.setLayout(kGradientPanel3Layout);
        kGradientPanel3Layout.setHorizontalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel3Layout.createSequentialGroup()
                        .addComponent(cpHoaDon)
                        .addContainerGap())
                    .addGroup(kGradientPanel3Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbNgayMua, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbMaHD, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbMaNV, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbMaKH, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbTongTien, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(49, 49, 49)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNgayMua, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTongTien, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtMaNV, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtMaHD, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                                    .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 221, Short.MAX_VALUE)))
                        .addGap(101, 101, 101)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))))
        );
        kGradientPanel3Layout.setVerticalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMaHD)
                    .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel3Layout.createSequentialGroup()
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbMaNV)
                            .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbNgayMua)
                            .addComponent(txtNgayMua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbMaKH)
                            .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTongTien)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addComponent(cpHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimKiemHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemHoaDonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbHoaDon.getModel();

        String option[] = {"Tìm bằng mã HD", "Tìm bằng mã NV", "Tìm bằng mã KH", "Hủy"};
        ImageIcon iconFind = new ImageIcon("src//icons//Search_Icon_32.png");

        int result = JOptionPane.showOptionDialog(this, "Mời bạn chọn cách thức tìm kiếm!", "Tìm kiếm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, iconFind, option, null);
        if (result == 0) {
            String maHD = (String) JOptionPane.showInputDialog(this, "Mời bạn nhập mã hóa đơn!", "Tìm kiếm bằng mã hóa đơn", JOptionPane.INFORMATION_MESSAGE, iconFind, null, null);
            boolean resultInput = false;
            for (int i = 0; i < listHoaDon.size(); i++) {
                if (maHD.equals(listHoaDon.get(i).getMaHD())) {
                    JOptionPane.showMessageDialog(this, "Tìm thấy hóa đơn!", "Tìm kiếm", JOptionPane.INFORMATION_MESSAGE, iconFind);
                    resultInput = true;
                    txtMaHD.setText(listHoaDon.get(i).getMaHD());
                    txtMaNV.setText(listHoaDon.get(i).getMaNV());
                    txtNgayMua.setText(listHoaDon.get(i).getNgayBan());
                    txtMaKH.setText(listHoaDon.get(i).getMaKH());
                    txtTongTien.setText(this.dinhDangtien(listHoaDon.get(i).getTongTien()));
                    model.setRowCount(0);

                    Object[] objectHD = new Object[]{
                        listHoaDon.get(i).getMaHD(),
                        listHoaDon.get(i).getMaNV(),
                        listHoaDon.get(i).getNgayBan(),
                        listHoaDon.get(i).getMaKH(),
                        this.dinhDangtien(listHoaDon.get(i).getTongTien())
                    };
                    model.addRow(objectHD);
                }
            }
            if (resultInput == false) {
                JOptionPane.showMessageDialog(this, "Không tồn tại mã hóa đơn này!", "Tìm kiếm", JOptionPane.INFORMATION_MESSAGE, iconFind);
            }
        } else if (result == 1) {
            String maNV = (String) JOptionPane.showInputDialog(this, "Mời bạn nhập vào mã nhân viên!", "Tìm kiếm bằng mã nhân viên", JOptionPane.INFORMATION_MESSAGE, iconFind, null, null);
            boolean resultInput = false;
            for (int i = 0; i < listHoaDon.size(); i++) {
                if (maNV.equals(listHoaDon.get(i).getMaNV())) {
                    JOptionPane.showMessageDialog(this, "Tìm thấy hóa đơn!", "Tìm kiếm", JOptionPane.INFORMATION_MESSAGE, iconFind);
                    resultInput = true;
                    txtMaHD.setText(listHoaDon.get(i).getMaHD());
                    txtMaNV.setText(listHoaDon.get(i).getMaNV());
                    txtNgayMua.setText(listHoaDon.get(i).getNgayBan());
                    txtMaKH.setText(listHoaDon.get(i).getMaKH());
                    txtTongTien.setText(this.dinhDangtien(listHoaDon.get(i).getTongTien()));
                    model.setRowCount(0);

                    Object[] objectHD = new Object[]{
                        listHoaDon.get(i).getMaHD(),
                        listHoaDon.get(i).getMaNV(),
                        listHoaDon.get(i).getNgayBan(),
                        listHoaDon.get(i).getMaKH(),
                        this.dinhDangtien(listHoaDon.get(i).getTongTien())
                    };
                    model.addRow(objectHD);
                }
            }
            if (resultInput == false) {
                JOptionPane.showMessageDialog(this, "Không tồn tại mã nhân viên này trong bảng hóa đơn!", "Tìm kiếm", JOptionPane.INFORMATION_MESSAGE, iconFind);
            }
        } else if (result == 2) {
            String maKH = (String) JOptionPane.showInputDialog(this, "Mời bạn nhập vào mã khách hàng!", "Tìm kiếm bằng mã khách hàng", JOptionPane.INFORMATION_MESSAGE, iconFind, null, null);
            boolean resultInput = false;
            for (int i = 0; i < listHoaDon.size(); i++) {
                if (maKH.equals(listHoaDon.get(i).getMaKH())) {
                    JOptionPane.showMessageDialog(this, "Tìm thấy hóa đơn!", "Tìm kiếm", JOptionPane.INFORMATION_MESSAGE, iconFind);
                    resultInput = true;
                    txtMaHD.setText(listHoaDon.get(i).getMaHD());
                    txtMaNV.setText(listHoaDon.get(i).getMaNV());
                    txtNgayMua.setText(listHoaDon.get(i).getNgayBan());
                    txtMaKH.setText(listHoaDon.get(i).getMaKH());
                    txtTongTien.setText(this.dinhDangtien(listHoaDon.get(i).getTongTien()));
                    model.setRowCount(0);

                    Object[] objectHD = new Object[]{
                        listHoaDon.get(i).getMaHD(),
                        listHoaDon.get(i).getMaNV(),
                        listHoaDon.get(i).getNgayBan(),
                        listHoaDon.get(i).getMaKH(),
                        this.dinhDangtien(listHoaDon.get(i).getTongTien())
                    };
                    model.addRow(objectHD);
                }
            }
            if (resultInput == false) {
                JOptionPane.showMessageDialog(this, "Không tồn tại ngày giao dịch này trong bảng hóa đơn!", "Tìm kiếm", JOptionPane.INFORMATION_MESSAGE, iconFind);
            }
        }
    }//GEN-LAST:event_btnTimKiemHoaDonActionPerformed

    private void tbHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHoaDonMouseClicked
        // TODO add your handling code here:
        showDetail();
    }//GEN-LAST:event_tbHoaDonMouseClicked

    private void btnHienThiAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHienThiAllActionPerformed
        // TODO add your handling code here:
        fillToTable();
    }//GEN-LAST:event_btnHienThiAllActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHienThiAll;
    private javax.swing.JButton btnTimKiemHoaDon;
    private javax.swing.JScrollPane cpHoaDon;
    private javax.swing.JPanel jPanel1;
    private keeptoo.KGradientPanel kGradientPanel3;
    private javax.swing.JLabel lbMaHD;
    private javax.swing.JLabel lbMaKH;
    private javax.swing.JLabel lbMaNV;
    private javax.swing.JLabel lbNgayMua;
    private javax.swing.JLabel lbTongTien;
    private javax.swing.JTable tbHoaDon;
    private javax.swing.JTextField txtMaHD;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtNgayMua;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables

    private void fillToTable() {
        model = (DefaultTableModel) tbHoaDon.getModel();
        model.setRowCount(0);

        try {
            listHoaDon.clear();
            Statement st = connectionSQL.ketnoi("QLIPHONE").createStatement();
            String sql = "select * from hoadon";
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                String maHD = rs.getString(1);
                String maNV = rs.getString(2);
                String ngayBan = rs.getString(3);
                String maKH = rs.getString(4);
                Double tongTien = rs.getDouble(5);

                ClassHoaDon hd = new ClassHoaDon(maHD, maNV, ngayBan, maKH, tongTien);
                listHoaDon.add(hd);
            }
            for (int i = 0; i < listHoaDon.size(); i++) {
                Object[] hoaDonObject = new Object[]{
                    listHoaDon.get(i).getMaHD(),
                    listHoaDon.get(i).getMaNV(),
                    listHoaDon.get(i).getNgayBan(),
                    listHoaDon.get(i).getMaKH(),
                    this.dinhDangtien(listHoaDon.get(i).getTongTien()),};
                model.addRow(hoaDonObject);
            }
        } catch (Exception e) {
        }

    }

    //show hóa đơn lên textfield
    private void showDetail() {
        int selectRow = tbHoaDon.getSelectedRow();
        model = (DefaultTableModel) tbHoaDon.getModel();
        txtMaHD.setText((String) model.getValueAt(selectRow, 0));
        txtMaNV.setText((String) model.getValueAt(selectRow, 1));
        txtNgayMua.setText((String) model.getValueAt(selectRow, 2));
        txtMaKH.setText((String) model.getValueAt(selectRow, 3));
        txtTongTien.setText((String) model.getValueAt(selectRow, 4));
    }
}
